/***********************************************************************************************/
/*       Функция: FilePrintLine(file):file                                                     */
/*       Цель:  Написать программу, принимающую в качестве аргумента командной строки          */
/*имя текстового файла и выводящую содержимое файла в стандартный поток вывода. Если содержимое*/
/* файла не умещается на одном машинном экране, файл выводится постранично: сначала первая     */
/* страница, потом вторая и так далее. Каждая последующая страница выводится на экран после    */
/* нажатия пользователем клавиши Enter.                                                        */
/*                                                                                             */
/*       Исходные данные:                                                                      */
/*         Файл неопределенной длинны                                                          */
/*                                                                                             */
/*       Результат:                                                                            */
/*         Отображение файла в                                                                 */
/*         стандартном потоке вывода                                                           */
/*                                                                                             */
/*       Вызываемые модули:                                                                    */
/*        - iostream                                                                           */
/*        - cstdio                                                                             */
/*---------------------------------------------------------------------------------------------*/
/*       Дата: 2019 | 24 | 02                                                                  */
/*       Автор: Васильев Кирилл Николаевич                                                     */
/*       ver 1.01                                                                              */
/*       Исправления: отсутствуют                                                              */
/***********************************************************************************************/

/*=============================================================================================*/
// Директивы препроцессора

#include <iostream>
#include <cstdio>

/*=============================================================================================*/
// Подключение функций и классов стандартной библиотеки С++

using std::cout;

/*=============================================================================================*/
// Функция открытия файла с проверкой

FILE* createFile(const char* str) {
	FILE* file = fopen(str, "r");
	if (file == nullptr) {
		cout << "File " << str << " cannot be opened.\n";
		exit(-1);
	}
	else
		return file;
}

/*=============================================================================================*/
// Вывод 80 строк файла

void printFile(FILE* fptr, int index, char* str) {
	for (int i = index * 80; (i < (index + 1) * 80) && fgets(str, 1024, fptr); i++)
		cout << str;
	return;
}

/*=============================================================================================*/
// Нажатие клавиши Enter

bool pressEnter(FILE* fptr) {
	bool res = true;
	static int index(0);
	char str[1024];
	if (fgets(str, 1024, fptr)) {
		system("clear");
		index++;
		printFile(fptr, index, str);
	}
	else
		res = false;
	return res;
}

/*=============================================================================================*/

void logo(void) {
	cout << "\033[37;1m\033[40m" << "\n *********************************************************** ";
	cout << "\033[37;1m\033[40m" << "\n * Nizhniy Novgorod Technical University                   * ";
	cout << "\033[37;1m\033[40m" << "\n * Study work number 3. Task number 4.                     * ";
	cout << "\033[37;1m\033[40m" << "\n * Performed student 18-IVT-2 Vasilev Kirill               * ";
	cout << "\033[37;1m\033[40m" << "\n *********************************************************** \n\n";
	return;
}


/*=============================================================================================*/
// Функции вывода сообщений

void error(void) {
	cout << "Please enter text file name.\n";
	return;
}

void help(void) {
	cout << "This program takes as input the name\nof an existing text file and displays its contents.\n";
	return;
}

void info(void) {
	logo();
	return;
}

/*=============================================================================================*/
// Реализуем функцию похожую на "int strlen(const char* str) {...}"

int myLen(const char* str) {
	int res = 0;
	for (res; str[res] != '\0'; res++);
	return res;
}

/*=============================================================================================*/
// Реализуем функцию похожую на "int strcmp(const char* str1, const char* str2) {...}"

int myCmp(const char* str1, const char* str2) {
	int res = 0;
	if (myLen(str1) != myLen(str2)) {
		res = -1;
		return res;
	}
	for (int i = 0; i < myLen(str1); i++) {
		if (str1[i] != str2[i]) {
			res = 1;
			break;
		}
	}
	return res;
}

int main(int argc, const char* argv[]) {

	system("clear");

	// Если кол-во аргументов равно 1 выводим сообщение об ошибке
	if (argc == 1) error(), exit(-1);
	// Вывод справочной информации
	if ((!myCmp(argv[1], "-h"))||(!myCmp(argv[1], "-help"))) help(), exit(0); 
	// Вывод информации об авторе
	if ((!myCmp(argv[1], "-i"))||(!myCmp(argv[1], "-info"))) info(), exit(0);

	// Открытие файла
	FILE* file = createFile(argv[1]);

	// Постраничный вывод
	while (pressEnter(file)) {
		getchar();
		continue;
	}
	return 0;
}
