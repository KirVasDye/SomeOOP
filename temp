/***********************************************************************************************/
/*       Функция: FilePrintLine(file):file                                                     */
/*       Цель:  Написать программу, принимающую в качестве аргумента командной строки          */
/*имя текстового файла и выводящую содержимое файла в стандартный поток вывода. Если содержимое*/
/* файла не умещается на одном машинном экране, файл выводится постранично: сначала первая     */
/* страница, потом вторая и так далее. Каждая последующая страница выводится на экран после    */
/* нажатия пользователем клавиши Enter.                                                        */
/*                                                                                             */
/*       Исходные данные:                                                                      */
/*         Файл неопределенной длинны                                                          */
/*                                                                                             */
/*       Результат:                                                                            */
/*         Отображение файла в                                                                 */
/*         стандартном потоке вывода                                                           */
/*                                                                                             */
/*       Вызываемые модули:                                                                    */
/*        - iostream                                                                           */
/*        - cstdio                                                                             */
/*        - cstring                                                                            */
/*        - string                                                                             */
/*        - cstdlib                                                                            */
/*---------------------------------------------------------------------------------------------*/
/*       Дата: 2019 | 24 | 02                                                                  */
/*       Автор: Розно Константин                                                               */
/*       ver 1.01                                                                              */
/*       Исправления: отсутствуют                                                              */
/***********************************************************************************************/

/*=============================================================================================*/
// Директивы препроцессора

#include <iostream>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>

/*=============================================================================================*/
// Подключение функций и классов стандартной библиотеки С++

using std::string;
using std::cout;
using std::ifstream;
using std::getline;

void logo() {
	cout << "\033[37;1m\033[40m" << "\n *********************************************************** ";
	cout << "\033[37;1m\033[40m" << "\n * Nizhniy Novgorod Technical University                   * ";
	cout << "\033[37;1m\033[40m" << "\n * Study work number 20. Task number 1.                    * ";
	cout << "\033[37;1m\033[40m" << "\n * Performed student 18-IVT-2 Rozno Konstantin             * ";
	cout << "\033[37;1m\033[40m" << "\n *********************************************************** \n\n";
	return;
}

void error() {
	cout << "Please enter text file name.\n";
	return;
}

void help() {
	cout << "This program takes as input the name\nof an existing text file and displays its contents.\n";
	return;
}

int main(int argc, const char* argv[]) {
	// Если кол-во аргументов равно 1 выводим сообщение об ошибке
	if (argc == 1) error(), exit(-1);
	// Вывод справочной информации
	if ((!strcmp(argv[1], "-h")) || (!strcmp(argv[1], "-help"))) help(), exit(0);
	// Вывод информации об авторе
	if ((!strcmp(argv[1], "-i")) || (!strcmp(argv[1], "-info"))) logo(), exit(0);

	ifstream file(argv[1]);

	if (!file.is_open()) {
		cout << "File " << argv[1] << " cannot be opened.\n";
		exit(-1);
	}

	string str;

	int word = 0, space = 0, simbol = 0, predl = 0, bukva = 0;
	while (getline(file, str)) {
		for (int i = 0; i < str.length(); i++) {
			if (str[i] == ' ') space++, word++;
			if (str[i] == '.') predl++;
			if ((str[i] >= 'a'&&str[i] <= 'z') || (str[i] >= 'A'&&str[i] <= 'Z')) bukva++;
		}
		simbol += str.length();
	}
	cout << "1) " << simbol << "\n";
	cout << "2) " << simbol-space << "\n";
	cout << "3) " << bukva << "\n";
	cout << "4) " << word << "\n";
	cout << "5) " << predl << "\n";
	return 0;
}
